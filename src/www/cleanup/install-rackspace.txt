SETUP RACKSPACE


// Clean local version of known_hosts (remove old entries for IP)
mate .ssh/known_hosts



// LOGIN TO SERVER
ssh root@__IP__



// CHANGE ROOT PASSWORD
passwd



// ADD USER
adduser __USERNAME__



// ENABLE SUDO FOR USER
// RUN visudo TO EDIT CONTENT OF /etc/sudoers
visudo

// PARTIAL CONTENT OF /etc/sudoers

# User privilege specification
root    ALL=(ALL:ALL) ALL
__USERNAME__ ALL=(ALL) ALL # <-- ADD LINE



// SETUP SSH-KEYS

// CREATE .SSH FOLDER FOR USER ON SERVER
mkdir -p /home/__USERNAME__/.ssh

// COPY PUBLIC KEY TO SERVER (FROM LOCAL MACHINE)
scp ~/.ssh/id_rsa.pub root@__IP__:/home/__USERNAME__/.ssh/authorized_keys

// SET KEY PERMISSIONS (ON SERVER)
chown -R __USERNAME__:__USERNAME__ /home/__USERNAME__/.ssh
chmod 700 /home/__USERNAME__/.ssh
chmod 600 /home/__USERNAME__/.ssh/authorized_keys



// MODIFY SSH-CONFIGURATION
vi /etc/ssh/sshd_config

// FIND AND CHECK THESE LINES
Port __PORT__
Protocol 2
PermitRootLogin no
PasswordAuthentication no
X11Forwarding no
UsePAM yes
UseDNS no
AllowUsers __USERNAME__

// SET UP IP-TABLES
vi /etc/iptables.test.rules

// COPY FOLLOWING INTO /etc/iptables.test.rules
*filter


#  Allows all loopback (lo0) traffic and drop all traffic to 127/8 that doesn't use lo0
-A INPUT -i lo -j ACCEPT
-A INPUT ! -i lo -d 127.0.0.0/8 -j REJECT


#  Accepts all established inbound connections
-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT


#  Allows all outbound traffic
#  You can modify this to only allow certain traffic
-A OUTPUT -j ACCEPT


# Allows HTTP and HTTPS connections from anywhere (the normal ports for websites)
-A INPUT -p tcp --dport 80 -j ACCEPT
-A INPUT -p tcp --dport 443 -j ACCEPT


#  Allows SSH connections
#
# THE -dport NUMBER IS THE SAME ONE YOU SET UP IN THE SSHD_CONFIG FILE
#
-A INPUT -p tcp -m state --state NEW --dport __PORT__ -j ACCEPT


# Allow ping
-A INPUT -p icmp -m icmp --icmp-type 8 -j ACCEPT


# log iptables denied calls
-A INPUT -m limit --limit 5/min -j LOG --log-prefix "iptables denied: " --log-level 7


# Reject all other inbound - default deny unless explicitly allowed policy
-A INPUT -j REJECT
-A FORWARD -j REJECT

COMMIT
// END OF FILE

// RESTORE IPTABLES
iptables-restore < /etc/iptables.test.rules

// CHECK IP-TABLES
iptables -L

// SAVE NEW IPTABLES
iptables-save > /etc/iptables.up.rules

// LOAD ON BOOT
vi /etc/network/if-pre-up.d/iptables

// COPY FOLLOWING INTO /etc/network/if-pre-up.d/iptables
#!/bin/sh
/sbin/iptables-restore < /etc/iptables.up.rules
// END OF FILE

// SET PERMISSIONS
chmod +x /etc/network/if-pre-up.d/iptables

// RESTART SSH
sudo service ssh restart



// LOGIN AS USER
ssh -p __PORT__ __USERNAME__@__IP__


// set locales
sudo locale-gen en_GB.UTF-8
sudo /usr/sbin/update-locale LANG=en_GB.UTF-8



// UPDATE APTITUDE
sudo aptitude update
sudo aptitude safe-upgrade
sudo aptitude full-upgrade

// INSTALL GIT
sudo aptitude install git



// INSTALL APACHE
sudo aptitude install apache2 apache2.2-common apache2-mpm-prefork apache2-utils libexpat1 ssl-cert

// CLONE GIT CONF (ADD dev branch for dev server)
sudo git clone https://github.com/e-types/webserver.conf.git /srv/conf (live)
sudo git clone -b dev https://github.com/e-types/webserver.conf.git /srv/conf (dev)


// UPDATE APACHE CONF
sudo vi /etc/apache2/apache2.conf

// ADD TO BOTTOM OF /etc/apache2/apache2.conf
ServerName e-types-live 
Include /srv/conf/*.conf



// INSTALL PHP
sudo aptitude install libapache2-mod-php5 php5 php5-cli php5-common php5-curl php5-dev php5-gd php5-imagick php5-mcrypt php5-memcache php5-mhash php5-mysql php5-pspell php5-snmp php5-sqlite php5-xmlrpc


// install PHP http
sudo aptitude install php-pear
sudo aptitude install libcurl4-gnutls-dev
sudo aptitude install php-http make
sudo pecl install pecl_http


// ADD TO /etc/php5/apache2/php.ini and /etc/php5/cli/php.ini
extension=http.so

// UPDATE IN /etc/php5/apache2/php.ini and /etc/php5/cli/php.ini
post_max_size = 30M
upload_max_filesize = 30M
date.timezone = "Europe/Copenhagen"

// zip
sudo aptitude install zip


// INSTALL MYSQL
sudo aptitude install mysql-server mysql-client


// ADD SSL
sudo a2enmod ssl
sudo a2enmod rewrite



// CREATE DEFAULT CONF
sudo vi /etc/apache2/sites-available/default-e-types

// COPY FOLLOWING INTO /etc/apache2/sites-available/default-e-types
<VirtualHost *:80>
	DocumentRoot /srv/sites
	ServerAdmin __EMAIL__

	<Directory />
		Options FollowSymLinks
		AllowOverride None
	</Directory>

	<Directory /srv/sites>
		Options FollowSymLinks
		AllowOverride None
		Order deny,allow
		Deny from all
	</Directory>

</VirtualHost>
// END OF FILE



// enable default conf for hvadhedderde
sudo a2ensite default-e-types

// disable default conf
sudo a2dissite default

// add log rotation
sudo aptitude install logrotate


// CREATE WEBSITE FOLDERS
sudo mkdir /srv/sites
sudo mkdir /srv/sites/e-types



// ADD USER + CREATE htpasswd FILE
sudo htpasswd -cm /srv/auth-file __USERNAME__
// ADD MORE USERS
sudo htpasswd -m /srv/auth-file __USERNAME__


// git default settings
git config --global user.name "__USERNAME__"
git config --global user.email "__EMAIL__"
git config --global credential.helper cache



// COPY TOOLS 
sudo git clone -b tools https://github.com/e-types/webserver.conf.git /srv/tools



// ADD ALIAS'
vi /home/__USERNAME__/.profile

alias apache="sudo service apache2"
alias update_conf="php /srv/tools/update_conf.php"
alias update_tools="php /srv/tools/update_tools.php"
alias update_client="php /srv/tools/update_client.php"
alias update_server="php /srv/tools/update_server.php"







// CHECK OUT REPOS TO MATCH CONTENT OF 
sudo git clone --recursive https://github.com/e-types/e-types_com.git /srv/sites/e-types/e-types_com





ffmpeg on ubuntu 12


sudo aptitude install build-essential checkinstall yasm texi2html libfaac-dev libfaad-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev libvorbis-dev libvpx-dev libx11-dev libxfixes-dev libxvidcore-dev zlib1g-dev libx264-dev x264 libsdl1.2-dev

// version 1.1.2
wget http://www.ffmpeg.org/releases/ffmpeg-1.1.2.tar.gz
tar xvf ffmpeg-1.1.2.tar.gz

// version 2.2.1
wget http://www.ffmpeg.org/releases/ffmpeg-2.1.1.tar.gz
tar xvf ffmpeg-2.1.1.tar.gz


sudo ./configure --enable-gpl --enable-version3 --enable-nonfree --enable-postproc --enable-pthreads --enable-libfaac --enable-libmp3lame --enable-libtheora --enable-libvorbis --enable-libx264 --enable-libxvid --enable-x11grab --enable-libvpx

sudo make

sudo make install
sudo make distclean
hash -r






// MAYBE NOT NEEDED - TESTING RACKSPACE MONITORING
// Glances - system monitoring
sudo aptitude install python-pip build-essential python-dev
sudo pip install Glances


// OLD METHOD - DON'T USE
sudo checkinstall --fstrans=no --install=yes --pkgname=ffmpeg --pkgversion "2.2.1" --backup=no --default

hash x264 ffmpeg ffplay



